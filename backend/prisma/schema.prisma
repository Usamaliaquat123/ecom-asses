// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  ADMIN
  USER
  MODERATOR
}

enum ReportStatus {
  PENDING
  PROCESSING
  COMPLETED
  FAILED
}

model User {
  id           Int       @id @default(autoincrement())
  email        String    @unique
  passwordHash String    @map("password_hash")
  role         UserRole  @default(USER)
  createdAt    DateTime  @default(now()) @map("created_at")
  updatedAt    DateTime  @updatedAt @map("updated_at")
  
  // Relations
  profile       UserProfile?
  analyticsData AnalyticsData[]
  reports       Report[]

  @@map("users")
}

model UserProfile {
  id        Int      @id @default(autoincrement())
  userId    Int      @unique @map("user_id")
  firstName String?  @map("first_name")
  lastName  String?  @map("last_name")
  avatar    String?
  phone     String?
  address   String?
  isActive  Boolean  @default(true) @map("is_active")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  
  // Relations
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("user_profiles")
}

model AnalyticsData {
  id         Int      @id @default(autoincrement())
  userId     Int      @map("user_id")
  metricType String   @map("metric_type")
  value      Decimal  @db.Decimal(12, 2)
  metadata   Json?
  recordedAt DateTime @default(now()) @map("recorded_at")
  
  // Relations
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("analytics_data")
}

model Report {
  id          Int          @id @default(autoincrement())
  title       String
  generatedBy Int          @map("generated_by")
  filePath    String?      @map("file_path")
  status      ReportStatus @default(PENDING)
  createdAt   DateTime     @default(now()) @map("created_at")
  updatedAt   DateTime     @updatedAt @map("updated_at")
  
  // Relations
  user User @relation(fields: [generatedBy], references: [id], onDelete: Cascade)

  @@map("reports")
}

model SalesMetric {
  id        Int      @id @default(autoincrement())
  date      DateTime
  revenue   Decimal  @db.Decimal(12, 2)
  orders    Int
  customers Int
  channel   String
  createdAt DateTime @default(now()) @map("created_at")

  @@map("sales_metrics")
}

model CustomerMetric {
  id              Int      @id @default(autoincrement())
  date            DateTime
  totalCustomers  Int      @map("total_customers")
  newCustomers    Int      @map("new_customers")
  returningCustomers Int   @map("returning_customers")
  averageOrderValue Decimal @db.Decimal(10, 2) @map("average_order_value")
  createdAt       DateTime @default(now()) @map("created_at")

  @@map("customer_metrics")
}

model InventoryItem {
  id          Int      @id @default(autoincrement())
  sku         String   @unique
  name        String
  category    String
  stock       Int
  reserved    Int      @default(0)
  price       Decimal  @db.Decimal(10, 2)
  cost        Decimal  @db.Decimal(10, 2)
  supplier    String?
  lastUpdated DateTime @default(now()) @map("last_updated")
  createdAt   DateTime @default(now()) @map("created_at")

  @@map("inventory_items")
}


