{
  "info": {
    "name": "Admin Panel Backend API",
    "description": "Complete REST API collection for the Admin Panel backend with authentication, user management, analytics, file upload, reports, and integrations.",
    "version": "1.0.0",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "auth": {
    "type": "bearer",
    "bearer": [
      {
        "key": "token",
        "value": "{{auth_token}}",
        "type": "string"
      }
    ]
  },
  "variable": [
    {
      "key": "base_url",
      "value": "http://localhost:4000/api",
      "type": "string"
    },
    {
      "key": "auth_token",
      "value": "",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "Authentication",
      "item": [
        {
          "name": "Register User",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"admin@example.com\",\n  \"password\": \"password123\",\n  \"firstName\": \"Admin\",\n  \"lastName\": \"User\",\n  \"phone\": \"+1234567890\",\n  \"address\": \"123 Main St, City, Country\",\n  \"role\": \"ADMIN\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/register",
              "host": ["{{base_url}}"],
              "path": ["auth", "register"]
            },
            "description": "Register a new user with profile information"
          },
          "response": []
        },
        {
          "name": "Login User",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    if (response.success && response.data.token) {",
                  "        pm.collectionVariables.set('auth_token', response.data.token);",
                  "        console.log('Auth token saved:', response.data.token);",
                  "    }",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"admin@example.com\",\n  \"password\": \"password123\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/login",
              "host": ["{{base_url}}"],
              "path": ["auth", "login"]
            },
            "description": "Login user and get JWT token"
          },
          "response": []
        },
        {
          "name": "Get Current User",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/auth/me",
              "host": ["{{base_url}}"],
              "path": ["auth", "me"]
            },
            "description": "Get current authenticated user information"
          },
          "response": []
        },
        {
          "name": "Logout User",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/auth/logout",
              "host": ["{{base_url}}"],
              "path": ["auth", "logout"]
            },
            "description": "Logout current user"
          },
          "response": []
        }
      ],
      "description": "Authentication endpoints for user registration, login, and session management"
    },
    {
      "name": "User Management",
      "item": [
        {
          "name": "Get All Users",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/users?page=1&limit=10&search=&role=&status=&sortBy=createdAt&sortOrder=desc",
              "host": ["{{base_url}}"],
              "path": ["users"],
              "query": [
                {
                  "key": "page",
                  "value": "1",
                  "description": "Page number (default: 1)"
                },
                {
                  "key": "limit",
                  "value": "10",
                  "description": "Items per page (default: 10, max: 100)"
                },
                {
                  "key": "search",
                  "value": "",
                  "description": "Search by email, first name, or last name"
                },
                {
                  "key": "role",
                  "value": "",
                  "description": "Filter by role: ADMIN, USER, MODERATOR"
                },
                {
                  "key": "status",
                  "value": "",
                  "description": "Filter by status: active, inactive"
                },
                {
                  "key": "sortBy",
                  "value": "createdAt",
                  "description": "Sort by: createdAt, email, firstName, lastName"
                },
                {
                  "key": "sortOrder",
                  "value": "desc",
                  "description": "Sort order: asc, desc"
                }
              ]
            },
            "description": "Get paginated list of users with filtering and sorting"
          },
          "response": []
        },
        {
          "name": "Get User by ID",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/users/1",
              "host": ["{{base_url}}"],
              "path": ["users", "1"]
            },
            "description": "Get specific user by ID"
          },
          "response": []
        },
        {
          "name": "Create User",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"newuser@example.com\",\n  \"password\": \"password123\",\n  \"firstName\": \"John\",\n  \"lastName\": \"Doe\",\n  \"phone\": \"+1234567890\",\n  \"address\": \"456 Oak St, City, Country\",\n  \"role\": \"USER\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/users",
              "host": ["{{base_url}}"],
              "path": ["users"]
            },
            "description": "Create a new user (Admin/Moderator only)"
          },
          "response": []
        },
        {
          "name": "Update User",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"firstName\": \"Jane\",\n  \"lastName\": \"Smith\",\n  \"phone\": \"+0987654321\",\n  \"address\": \"789 Pine St, City, Country\",\n  \"role\": \"MODERATOR\",\n  \"isActive\": true\n}"
            },
            "url": {
              "raw": "{{base_url}}/users/1",
              "host": ["{{base_url}}"],
              "path": ["users", "1"]
            },
            "description": "Update user information (Admin/Moderator only)"
          },
          "response": []
        },
        {
          "name": "Delete User",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/users/1",
              "host": ["{{base_url}}"],
              "path": ["users", "1"]
            },
            "description": "Delete user (Admin/Moderator only)"
          },
          "response": []
        }
      ],
      "description": "User management endpoints for CRUD operations"
    },
    {
      "name": "Analytics",
      "item": [
        {
          "name": "Get Dashboard Analytics",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/analytics/dashboard?period=30d&timezone=UTC",
              "host": ["{{base_url}}"],
              "path": ["analytics", "dashboard"],
              "query": [
                {
                  "key": "period",
                  "value": "30d",
                  "description": "Time period: 7d, 30d, 90d, 1y"
                },
                {
                  "key": "timezone",
                  "value": "UTC",
                  "description": "Timezone for date calculations"
                }
              ]
            },
            "description": "Get comprehensive dashboard analytics data"
          },
          "response": []
        },
        {
          "name": "Get User Analytics",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/analytics/users?period=30d&groupBy=day",
              "host": ["{{base_url}}"],
              "path": ["analytics", "users"],
              "query": [
                {
                  "key": "period",
                  "value": "30d",
                  "description": "Time period: 7d, 30d, 90d, 1y"
                },
                {
                  "key": "groupBy",
                  "value": "day",
                  "description": "Group by: day, week, month"
                }
              ]
            },
            "description": "Get detailed user analytics and trends"
          },
          "response": []
        }
      ],
      "description": "Analytics endpoints for dashboard and user metrics"
    },
    {
      "name": "File Upload",
      "item": [
        {
          "name": "Upload Single File",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "file",
                  "type": "file",
                  "src": [],
                  "description": "Select a file to upload (images, documents)"
                }
              ]
            },
            "url": {
              "raw": "{{base_url}}/upload",
              "host": ["{{base_url}}"],
              "path": ["upload"]
            },
            "description": "Upload a single file (max 10MB)"
          },
          "response": []
        },
        {
          "name": "Upload Multiple Files",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "files",
                  "type": "file",
                  "src": [],
                  "description": "Select multiple files (max 10 files)"
                },
                {
                  "key": "files",
                  "type": "file",
                  "src": [],
                  "description": "Additional file"
                }
              ]
            },
            "url": {
              "raw": "{{base_url}}/upload/multiple",
              "host": ["{{base_url}}"],
              "path": ["upload", "multiple"]
            },
            "description": "Upload multiple files at once (max 10 files)"
          },
          "response": []
        },
        {
          "name": "Delete File",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/upload/filename.jpg",
              "host": ["{{base_url}}"],
              "path": ["upload", "filename.jpg"]
            },
            "description": "Delete an uploaded file by filename"
          },
          "response": []
        }
      ],
      "description": "File upload and management endpoints"
    },
    {
      "name": "Reports",
      "item": [
        {
          "name": "Export Data (JSON)",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/reports/export?type=users&format=json&startDate=2024-01-01&endDate=2024-12-31",
              "host": ["{{base_url}}"],
              "path": ["reports", "export"],
              "query": [
                {
                  "key": "type",
                  "value": "users",
                  "description": "Export type: users, analytics, sales"
                },
                {
                  "key": "format",
                  "value": "json",
                  "description": "Export format: json, csv"
                },
                {
                  "key": "startDate",
                  "value": "2024-01-01",
                  "description": "Start date (ISO format)"
                },
                {
                  "key": "endDate",
                  "value": "2024-12-31",
                  "description": "End date (ISO format)"
                }
              ]
            },
            "description": "Export data in JSON format (Admin/Moderator only)"
          },
          "response": []
        },
        {
          "name": "Export Data (CSV)",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/reports/export?type=analytics&format=csv&startDate=2024-01-01&endDate=2024-12-31",
              "host": ["{{base_url}}"],
              "path": ["reports", "export"],
              "query": [
                {
                  "key": "type",
                  "value": "analytics",
                  "description": "Export type: users, analytics, sales"
                },
                {
                  "key": "format",
                  "value": "csv",
                  "description": "Export format: json, csv"
                },
                {
                  "key": "startDate",
                  "value": "2024-01-01",
                  "description": "Start date (ISO format)"
                },
                {
                  "key": "endDate",
                  "value": "2024-12-31",
                  "description": "End date (ISO format)"
                }
              ]
            },
            "description": "Export data in CSV format (Admin/Moderator only)"
          },
          "response": []
        },
        {
          "name": "Get Reports Summary",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/reports/summary",
              "host": ["{{base_url}}"],
              "path": ["reports", "summary"]
            },
            "description": "Get summary of all reports and statistics (Admin/Moderator only)"
          },
          "response": []
        }
      ],
      "description": "Reports and data export endpoints"
    },
    {
      "name": "Integrations",
      "item": [
        {
          "name": "Webhook Endpoint",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"source\": \"stripe\",\n  \"event\": \"payment_intent.succeeded\",\n  \"data\": {\n    \"id\": \"pi_1234567890\",\n    \"amount\": 2500,\n    \"currency\": \"usd\",\n    \"status\": \"succeeded\"\n  },\n  \"timestamp\": \"2024-01-01T12:00:00Z\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/integrations/webhook",
              "host": ["{{base_url}}"],
              "path": ["integrations", "webhook"]
            },
            "description": "Webhook endpoint for external service integrations (Stripe, Shopify, etc.)"
          },
          "response": []
        },
        {
          "name": "Get Integration Status",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/integrations/status",
              "host": ["{{base_url}}"],
              "path": ["integrations", "status"]
            },
            "description": "Get status of all integrations (Admin/Moderator only)"
          },
          "response": []
        },
        {
          "name": "Test Webhook",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"source\": \"stripe\",\n  \"event\": \"customer.created\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/integrations/test",
              "host": ["{{base_url}}"],
              "path": ["integrations", "test"]
            },
            "description": "Test webhook functionality (Admin/Moderator only)"
          },
          "response": []
        }
      ],
      "description": "Integration and webhook endpoints"
    },
    {
      "name": "Health Check",
      "item": [
        {
          "name": "Health Check",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/../health",
              "host": ["{{base_url}}"],
              "path": ["..", "health"]
            },
            "description": "Check API server health status"
          },
          "response": []
        }
      ],
      "description": "System health and status endpoints"
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Auto-set base URL if not already set",
          "if (!pm.collectionVariables.get('base_url')) {",
          "    pm.collectionVariables.set('base_url', 'http://localhost:4000/api');",
          "}"
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Global test script for all requests",
          "pm.test('Response time is less than 5000ms', function () {",
          "    pm.expect(pm.response.responseTime).to.be.below(5000);",
          "});",
          "",
          "pm.test('Response has proper JSON structure', function () {",
          "    if (pm.response.headers.get('Content-Type') && pm.response.headers.get('Content-Type').includes('application/json')) {",
          "        const response = pm.response.json();",
          "        pm.expect(response).to.have.property('success');",
          "    }",
          "});"
        ]
      }
    }
  ]
}
